{"version":3,"sources":["views/app-views/basic/clients/list/EditProfile.js","components/shared-components/AvatarStatus/index.js","views/app-views/basic/clients/list/index.js"],"names":["EditProfile","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","this","props","data","visible","close","width","placement","onClose","closable","Flex","alignItems","mobileFlex","className","name","layout","initialValues","email","username","phoneNumber","phone","website","address","street","city","zipcode","onFinish","values","key","message","loading","content","setTimeout","success","duration","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","value","type","htmlType","onClick","Component","renderAvatar","text","AvatarStatus","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","UserList","state","users","auth","usersList","userProfileVisible","selectedUser","deleteUser","userId","setState","filter","item","showUserProfile","userInfo","closeUserProfile","tableColumns","title","dataIndex","render","_","record","sorter","compare","a","b","toLowerCase","length","elm","EyeOutlined","danger","DeleteOutlined","bodyStyle","padding","columns","dataSource","rowKey","connect"],"mappings":"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","file":"static/js/14.afc6bc18.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button, Input, Row, Col, message, Drawer } from \"antd\";\r\nimport { ROW_GUTTER } from \"constants/ThemeConstant\";\r\nimport Flex from \"components/shared-components/Flex\";\r\n\r\nexport class EditProfile extends Component {\r\n  getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  render() {\r\n    const { data, visible, close } = this.props;\r\n    const onFinish = (values) => {\r\n      const key = \"updatable\";\r\n      message.loading({ content: \"Updating...\", key });\r\n\r\n      setTimeout(() => {\r\n        message.success({ content: \"Done!\", key, duration: 2 });\r\n      }, 1000);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    const saveChange = () => {\r\n      setTimeout(() => {\r\n        close();\r\n      }, 1000);\r\n    };\r\n\r\n    return (\r\n      <Drawer\r\n        width={615}\r\n        placement=\"right\"\r\n        onClose={close}\r\n        closable={false}\r\n        visible={visible}\r\n      >\r\n        <Flex\r\n          alignItems=\"center\"\r\n          mobileFlex={false}\r\n          className=\"text-center text-md-left\"\r\n        ></Flex>\r\n        <div className=\"mt-4\">\r\n          <Form\r\n            name=\"basicInformation\"\r\n            layout=\"vertical\"\r\n            initialValues={\r\n              data\r\n                ? {\r\n                    name: data.name,\r\n                    email: data.email,\r\n                    username: data.username,\r\n                    phoneNumber: data?.phone,\r\n                    website: data.website,\r\n                    address: data.address.street,\r\n                    city: data.address.city,\r\n                    zipcode: data.address.zipcode,\r\n                  }\r\n                : {\r\n                    name: \"\",\r\n                    email: \"\",\r\n                    username: \"\",\r\n                    phoneNumber: \"\",\r\n                    website: \"\",\r\n                    address: \"\",\r\n                    city: \"\",\r\n                    zipcode: \"\",\r\n                  }\r\n            }\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={16}>\r\n                <Row gutter={ROW_GUTTER}>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Name\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please input your name!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input value={data ? data.name : \"\"} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Username\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please input your username!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input value={data ? data.username : \"\"} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          type: \"email\",\r\n                          message: \"Please enter a valid email!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input value={data ? data.email : \"\"} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item label=\"Phone Number\">\r\n                      <Input value={data ? data.phone : \"\"} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item label=\"Website\">\r\n                      <Input value={data ? data.website : \"\"} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={24}>\r\n                    <Form.Item label=\"Address\">\r\n                      <Input value={data ? data.address.street : \"\"} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item label=\"City\">\r\n                      <Input value={data ? data.address.city : \"\"} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item label=\"Zip code\">\r\n                      <Input value={data ? data.address.zipcode : \"\"} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Button type=\"primary\" htmlType=\"submit\" onClick={saveChange}>\r\n                  Save Change\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProfile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Tooltip, message, Button } from \"antd\";\r\nimport { EyeOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class UserList extends Component {\r\n  state = {\r\n    users: this.props.data.auth.usersList.data,\r\n    userProfileVisible: false,\r\n    selectedUser: null,\r\n    loading: this.props.data ? true : false,\r\n  };\r\n\r\n  deleteUser = (userId) => {\r\n    this.setState({\r\n      users: this.state.users.filter((item) => item.id !== userId),\r\n    });\r\n    message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n  };\r\n\r\n  showUserProfile = (userInfo) => {\r\n    this.setState({\r\n      userProfileVisible: true,\r\n      selectedUser: userInfo,\r\n    });\r\n  };\r\n\r\n  closeUserProfile = () => {\r\n    this.setState({\r\n      userProfileVisible: false,\r\n      selectedUser: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { users, userProfileVisible, selectedUser } = this.state;\r\n    const tableColumns = [\r\n      {\r\n        title: \"User\",\r\n        dataIndex: \"name\",\r\n        render: (_, record) => (\r\n          <div className=\"d-flex\">\r\n            <AvatarStatus\r\n              src={record.img}\r\n              name={record.name}\r\n              subTitle={record.email}\r\n            />\r\n          </div>\r\n        ),\r\n        sorter: {\r\n          compare: (a, b) => {\r\n            a = a.name.toLowerCase();\r\n            b = b.name.toLowerCase();\r\n            return a > b ? -1 : b > a ? 1 : 0;\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: \"Website\",\r\n        dataIndex: \"website\",\r\n        sorter: {\r\n          compare: (a, b) => a.website.length - b.website.length,\r\n        },\r\n      },\r\n      {\r\n        title: \"User name\",\r\n        dataIndex: \"username\",\r\n        sorter: {\r\n          compare: (a, b) => {\r\n            a = a.username.toLowerCase();\r\n            b = b.username.toLowerCase();\r\n            return a > b ? -1 : b > a ? 1 : 0;\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: \"Phone\",\r\n        dataIndex: \"phone\",\r\n        sorter: {\r\n          compare: (a, b) => a.phone.length - b.phone.length,\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"actions\",\r\n        render: (_, elm) => (\r\n          <div className=\"text-right\">\r\n            <Tooltip title=\"View\">\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"mr-2\"\r\n                icon={<EyeOutlined />}\r\n                onClick={() => {\r\n                  this.showUserProfile(elm);\r\n                }}\r\n                size=\"small\"\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <Button\r\n                danger\r\n                icon={<DeleteOutlined />}\r\n                onClick={() => {\r\n                  this.deleteUser(elm.id);\r\n                }}\r\n                size=\"small\"\r\n              />\r\n            </Tooltip>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <Card bodyStyle={{ padding: \"0px\" }}>\r\n        <Table columns={tableColumns} dataSource={users} rowKey=\"id\" />\r\n        <EditProfile\r\n          data={selectedUser}\r\n          visible={userProfileVisible}\r\n          close={() => {\r\n            this.closeUserProfile();\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { data: state };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserList);\r\n"],"sourceRoot":""}